<?php

# $Id$

// Written by James Flemer
// For eGrad2000.com
// <jflemer@acm.jhu.edu>
// <jflemer@eGrad2000.com>

/**
 * Choose the default language and locale path here.
 */
$lang = 'en';
$locale_path = '/usr/local/lib/php/contrib/phpESP/locale';

/**
 * Load the GNU Gettext module if it is not loaded.
 * If it cannot be loaded, define the NOP wrapper.
 * If the wrapper is defined, English will be the only 
 * language available.
 */
if(!ini_get('safe_mode') && 
		(extension_loaded('gettext') || @dl('gettext.so'))) { 
	if(!empty($HTTP_SERVER_VARS['HTTP_ACCEPT_LANGUAGE'])) {
		$langs = split(" *, *", $HTTP_SERVER_VARS['HTTP_ACCEPT_LANGUAGE']);
		foreach($langs as $tmp_lang) {
			$tmp_lang = quotemeta($tmp_lang);
			if(file_exists("$locale_path/$tmp_lang")) {
				$lang = $tmp_lang;
				break;
			}
			$tmp_lang = substr($tmp_lang, 0, strpos($tmp_lang, "-"));
			if(file_exists("$locale_path/$tmp_lang")) {
				$lang = $tmp_lang;
				break;
			}
		}
		unset($tmp_lang);
	}
	putenv("LC_ALL=$lang");
	bindtextdomain('messages', $locale_path);
	textdomain('messages');
} else if(!extension_loaded('gettext') && !defined('_GETTEXT')) {
 	define('_GETTEXT',TRUE);

	function _($s) {return($s);}
	function bindtextdomain($s) {}
	function textdomain($s) {}
}

/**
 * Here are all the configuration options.
 */
global $ESPCONFIG;	$ESPCONFIG = array(

// Name of application
'name' => 'phpESP',

// Path to include files ON DISK
// (normally <install root>/phpESP/admin/include)
'include_path' => '/usr/local/lib/php/contrib/phpESP/admin/include/',
		
// extention of include files
'extension' => '.inc',

// path to images ON THE WEB (for <img src='...'> tags)
'image_path' => 'http://'. $HTTP_SERVER_VARS['HTTP_HOST']. '/phpESP/images/',

// path to survey handler ON DISK
// (normally <install root>/phpESP/public/handler.php)
'handler'        => '/usr/local/lib/php/contrib/phpESP/public/handler.php',
'handler_prefix' => '/usr/local/lib/php/contrib/phpESP/public/handler-prefix.php',

// path to survey auto_handler ON THE WEB
'auto_handler' => 'http://'. $HTTP_SERVER_VARS['HTTP_HOST']. '/phpESP/public/survey.php',

// database connection info
'db_host' => 'localhost',
'db_user' => 'phpesp',		
'db_pass' => 'phpesp',
'db_name' => 'phpesp',

// set to FALSE to globally disable sending email
'allow_email' => TRUE,

// HTML Character Set (try: 'Windows-1251' for Cryillic etc)
'cf_charset' => 'ISO-8859-1',

// application version
'version' => '1.4 beta 3',

// use authentication on designer interface
'auth_design' => TRUE,

// use authentication on survey taking
'auth_response' => TRUE,

// set authentication type [ default, ldap ]
'auth_type' => 'default',

// ldap connection info (used just for authentication)
// set auth_type to ldap
'ldap_server' => 'ldap.domain.com',
'ldap_port' => '389',
'ldap_dn' => 'dc=domain,dc=com',
'ldap_filter' => 'uid=',

// tabs for editing surveys
'tabs' => array('general', 'questions', 'preview', 'order', 'finish'),

// default number of option lines for new questions
'default_num_choices' => 10,

// default thank you messages
'thank_head' => _('Thank You For Completing This Survey.'),
'thank_body' => _('Please do not use the back button on your browser to go
back. Please click on the link below to return you to where
you launched this survey.'),

// some colors
'main_bgcolor'		=> '#FFFFFF',
'link_color'		=> '#0000CC',
'vlink_color'		=> '#0000CC',
'alink_color'		=> '#0000CC',
'table_bgcolor'		=> '#0099FF',
//'table_bgcolor'		=> '#CC99FF',
//'sub1_bgcolor'		=> '#3399CC',
//'active_bgcolor'	=> '#339999',
'active_bgcolor'	=> '#FFFFFF',
'dim_bgcolor'		=> '#3399CC',
'error_color'		=> '#FFFF66',
'warn_color'		=> '#FFFF66',
'reqd_color'		=> '#FF0000',
'bgalt_color1'		=> '#FFFFFF',
'bgalt_color2'		=> '#EEEEEE',

// set to true to turn on various debugging options
'DEBUG' => FALSE, // TRUE,

// alias for PHP_SELF incase it needs to be locally
// overwritten
'ME' => $HTTP_SERVER_VARS['PHP_SELF'],

// CSS stylesheet to use
//'style_sheet' => 'phpesp.css',
'style_sheet' => '',

// selected language
'lang' => $lang,

// status of gettext extension
'gettext' => extension_loaded('gettext')

);

$ESPCONFIG['title'] = $ESPCONFIG['name'] .', v'. $ESPCONFIG['version'];

if(!defined('_CONSTS')) {
	define('_CONSTS', TRUE);
	define('STATUS_ACTIVE',	0x01);
	define('STATUS_DONE',	0x02);
	define('STATUS_DELETED',0x04);
	define('STATUS_TEST',	0x08);
}

if(!file_exists($ESPCONFIG['include_path'].'/funcs'.$ESPCONFIG['extension'])) {
	echo('<b>'. _('I can not find your includes ... check your ini settings'). '</b>');
	exit;
}
include($ESPCONFIG['include_path'].'/funcs'.$ESPCONFIG['extension']);

if( !($ESPCONFIG['db_conn'] = @mysql_connect(
		$ESPCONFIG['db_host'],
		$ESPCONFIG['db_user'],
		$ESPCONFIG['db_pass'])) ||
		!mysql_select_db( $ESPCONFIG['db_name'], $ESPCONFIG['db_conn'] )) {
	header( 'HTTP/1.0 503 '. _('Service Unavailable'));
	echo('<html><head><title>HTTP 503 '. _('Service Unavailable') .'</title></head>');
	echo('<body><h1>HTTP 503 '. _('Service Unavailable') .'</h1>');
	echo(mkerror(_('Connection to database failed. Please check configuration.')));
	if ($ESPCONFIG['DEBUG'])
		echo("<br>\n". mkerror(mysql_errno().": ".mysql_error()));
	echo('</body></html>');
	exit;
}

?>
